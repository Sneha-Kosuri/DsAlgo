/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 2*         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean leafSimilar(TreeNode root1, TreeNode root2) {
        ArrayList<Integer> leaf1= new ArrayList<Integer>();
        ArrayList<Integer> leaf2= new ArrayList<Integer>();
        
        //for first tree sequence
        leafsequence(root1,leaf1);
        //for second tree sequence
        leafsequence(root2,leaf2);
        
        // comparing the two leaf sequence
        return leaf1.equals(leaf2);  
        
    }
    public void leafsequence(TreeNode root, ArrayList leaf)
    {
        //ArrayList<Integer> leaf= new ArrayList<Integer>();
        //root is null
        if(root==null) return;
        
        
        //left and right subtree null
        
        
        if(root.left == null && root.right == null)
        {
        leaf.add(root.val);
        }
        leafsequence(root.left,leaf);
        leafsequence(root.right,leaf);
    }
}
